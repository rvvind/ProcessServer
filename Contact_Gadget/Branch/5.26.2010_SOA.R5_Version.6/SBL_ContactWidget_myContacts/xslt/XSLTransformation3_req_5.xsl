<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation3_req_5.map" md5sum="cd19f719b507500469ebe3936f7b3282" version="1.0.130" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V1.0.130
*
*   Mapping file:		XSLTransformation3_req_5.map
*   Map declaration(s):	XSLTransformation3_req_5
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Fwservice.cerner.com%252F%257DContact_spcList_spcDelete_spcWPS_spcCERN_ContactListDelete_Input/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FSBL_ContactWidget_myContacts_Lib%252FInvoke%257DContactListDelete_fault1Msg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:in="wsdl.http://wservice.cerner.com/"
    xmlns:in2="http://www.siebel.com/xml/MyContacts%20List%20WPS%20CERN"
    xmlns:in3="http://wservice.cerner.com/"
    xmlns:io="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out2="http://SBL_ContactWidget_myContacts_Lib/Invoke"
    xmlns:out="wsdl.http://SBL_ContactWidget_myContacts_Lib/Invoke"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    exclude-result-prefixes="in in2 in3 xalan"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="yes" xalan:indent-amount="2"/>
  <xsl:strip-space elements="*"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="io2:smo" mode="XSLTransformation3_req_5"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="XSLTransformation3_req_5">
    <io2:smo>
      <body>
        <!-- a simple data mapping: "context/failInfo/failureString"(String) to "out2:string_element"(String) -->
        <out2:string_element>
          <xsl:value-of select="context/failInfo/failureString"/>
        </out2:string_element>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
