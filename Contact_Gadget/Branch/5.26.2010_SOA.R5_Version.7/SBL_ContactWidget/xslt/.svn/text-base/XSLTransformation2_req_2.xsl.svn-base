<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation2_req_2.map" md5sum="1751da9dc2633a8ee47a84ce48ab6e82" version="7.0.200" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.200
*
*   Mapping file:		XSLTransformation2_req_2.map
*   Map declaration(s):	XSLTransformation2_req_2
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Fwservice.cerner.com%252F%257DContact_spcUpsert_spcWPS_spcCERN_ContactUpsert_Output/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FSBL_ContactWidget_Lib%252FInvoke%257DContactUpsertResponseMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:in="wsdl.http://wservice.cerner.com/"
    xmlns:out="http://SBL_ContactWidget_Lib/Invoke"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io2="http://wservice.cerner.com/"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out2="wsdl.http://SBL_ContactWidget_Lib/Invoke"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io7="http://www.siebel.com/xml/Contact%20WPS%20CERN"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://SBL_ContactWidget/xslt/XSLTransformation2_req_2"
    exclude-result-prefixes="in map xalan"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="body" mode="map:XSLTransformation2_req_2"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:XSLTransformation2_req_2">
    <body>
      <out:ContactUpsertResponse>
        <io2:Contact_spcUpsert_spcWPS_spcCERN_ContactUpsert_Output>
          <!-- a structural mapping: "io2:Contact_spcUpsert_spcWPS_spcCERN_ContactUpsert_Output/io7:ListOfContactWpsCern"(ListOfContactWpsCern) to "io7:ListOfContactWpsCern"(ListOfContactWpsCern) -->
          <xsl:copy-of select="io2:Contact_spcUpsert_spcWPS_spcCERN_ContactUpsert_Output/io7:ListOfContactWpsCern"/>
        </io2:Contact_spcUpsert_spcWPS_spcCERN_ContactUpsert_Output>
      </out:ContactUpsertResponse>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
